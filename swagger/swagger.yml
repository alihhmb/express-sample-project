openapi: 3.0.1
info:
    title: 'Products API'
    version: '1.0.0'
    description: 'Test Express API with autogenerated swagger doc'
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
    schemas:
        Login:
            type: "object"
            properties: 
                username:
                    type: "string"
                password:
                    type: "string"
        Token:
            type: "object"
            properties: 
                token:
                    type: "string"     
        Message:
            type: "object"
            properties: 
                message:
                    type: "string"     
        CategoryList:
            type: "object"
            properties:
                docs:
                    type: "array"
                    items:
                        $ref: "#/components/schemas/Category"
                page:
                    type: "integer"
                    format: "int32"
                pages:
                    type: "integer"
                    format: "int32"
                total:
                    type: "integer"
                    format: "int32"
        ProductList:
            type: "object"
            properties:
                docs:
                    type: "array"
                    items:
                        $ref: "#/components/schemas/Product"
                page:
                    type: "integer"
                    format: "int32"
                pages:
                    type: "integer"
                    format: "int32"
                total:
                    type: "integer"
                    format: "int32"
        AddCategory:
            type: "object"
            properties:                
                name:
                    type: "string"
        Category:
            type: "object"
            properties:
                id:
                    type: "integer"
                    format: "int32"
                name:
                    type: "string"
        AddProduct:
            type: "object"
            properties:               
                name:
                    type: "string"
                description:
                    type: "string"
                image:
                    type: "string"
                price:
                    type: "number"
                    format: "float"
                category_id: 
                    type: "integer"
                    format: "int32"    
        Product:
            type: "object"
            properties:
                id:
                    type: "integer"
                    format: "int32"
                name:
                    type: "string"
                description:
                    type: "string"
                image:
                    type: "string"
                price:
                    type: "number"
                    format: "float"
                category:
                    $ref: "#/components/schemas/Category"
       
paths:
    /api/login:
        post:
            tags:
                - User
            summary: Login
            description: Login
            requestBody:
                description: Login object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Login"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Token"
                400:
                description: "Bad Request"
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Message"
    /api/categories:
        get:
            tags:
                - Categories
            summary: List categories
            description: List categories     
            responses:               
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CategoryList"               
        post:
            tags:
            - Categories
            summary: Add category
            description: Add category
            security:
                - bearerAuth: []
            requestBody:
                description: Login object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AddCategory"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Category"
                400:
                    description: "Bad Request"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Message"               
        put:
            tags:
            - Categories
            summary: Update category
            description: Update category
            security:
                - bearerAuth: []
            requestBody:
                description: Category object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Category"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Category"
                400:
                    description: "Bad Request"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Message"
                404:
                    description: "Category Not Found"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Message"
    /api/categories/{id}:
        get:
            tags:
                - Categories
            summary: Get category
            description: Get category
            parameters:
                - name: id
                  in: path
                  description: Category ID
                  required: true
            schema:
                type: integer 
                format: int64
            responses:
                200:
                    description: successful operation 
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Category"
                404:
                    description: "Category Not Found"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Message"
        delete:
            tags:
                - Categories
            summary: Delete category
            description: Delete category
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  description: Category ID
                  required: true
            schema:
                type: integer
                format: int64
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Category"
                404:
                    description: "Category Not Found"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Message"










    /api/products:
        get:
            tags:
                - Products
            summary: List Products
            description: List Products     
            responses:               
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ProductList"              
        post:
            tags:
            - Products
            summary: Add Product
            description: Add Product
            security:
                - bearerAuth: []
            requestBody:
                description: Product object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AddProduct"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                400:
                    description: "Bad Request"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Message"               
        put:
            tags:
            - Products
            summary: Update Product
            description: Update Product
            security:
                - bearerAuth: []
            requestBody:
                description: Product object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Product"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                400:
                    description: "Bad Request"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Message"
                404:
                    description: "Category Not Found"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Message"
    /api/products/{id}:
        get:
            tags:
                - Products
            summary: Get Product
            description: Get Product
            parameters:
                - name: id
                  in: path
                  description: Product ID
                  required: true
            schema:
                type: integer 
                format: int64
            responses:
                200:
                    description: successful operation 
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                404:
                    description: "Product Not Found"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Message"
        delete:
            tags:
                - Products
            summary: Delete Product
            description: Delete Product
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  description: Product ID
                  required: true
            schema:
                type: integer
                format: int64
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                404:
                    description: "Product Not Found"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Message"
      
       
    /api/products/upload-image/{id}:
        put:
            tags:
                - Products
            summary: "upload category image"
            description: "upload category image"
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  description: Product ID
                  required: true
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:                    
                                image:
                                    type: string
                                    format: binary
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Category"
                404:
                    description: "Category Not Found"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Message"